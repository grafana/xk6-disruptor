# v1.55.0
# Please don't remove the first line. It is used in CI to determine the golangci version
run:
  deadline: 5m

issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # We want to try and improve the comments in the k6 codebase, so individual
  # non-golint items from the default exclusion list will gradually be added
  # to the exclude-rules below
  exclude-use-default: false

  exclude-rules:
    # Exclude duplicate code and function length and complexity checking in api
    - path: pkg/api/(.+)\.go
      linters:
        - dupl
        - funlen

    # Exclude duplicate code and function length and complexity checking in test
    # files (due to common repeats and long functions in test code)
    - path: _(test|gen)\.go
      linters:
        - cyclop
        - dupl
        - funlen
        - gocognit
        - bodyclose
        - maintidx
        - unparam
    - linters:
        - paralleltest # false positive: https://github.com/kunwardeep/paralleltest/issues/8.
      text: "does not use range value in test Run"
    # As per https://github.com/golangci/golangci-lint/issues/207#issuecomment-534771981
    - source: "^// http"
      linters:
        - lll
      

linters-settings:
  cyclop:
    max-complexity: 25
  dupl:
    threshold: 150
  exhaustive:
    default-signifies-exhaustive: true
  funlen:
    lines: 80
    statements: 60
  goconst:
    min-len: 10
    min-occurrences: 4
  govet:
    check-shadowing: true
  gosec:
    excludes:
      - G107 # Http request made with variable url
      - G204 # exec with variable command
      - G404 # use of weak random number (not used for cryptographic purposes)
      - G112 # Potential Slowloris Attack
      - G304 # Potential file inclusion via variable
  staticcheck:
    checks: ["all", "-SA1019"]

linters:
  enable-all: true
  disable:
    - noctx  # too many false positives when making simple http requests in tests
    - exhaustivestruct
    - exhaustruct
    - gci
    - gochecknoinits
    - gocyclo # replaced by cyclop since it also calculates the package complexity
    - godot
    - godox
    - goerr113 # most of the errors here are meant for humans
    - goheader
    - golint # this linter is deprecated
    - gomnd
    - gomodguard
    - interfacer # deprecated
    - ireturn
    - maligned # replaced by govet 'fieldalignment'
    - nlreturn
    - scopelint # deprecated, replaced by exportloopref
    - tagliatelle
    - testpackage
    - thelper
    - varnamelen # disabled before the final decision in (https://github.com/grafana/k6/pull/2323)
    - wrapcheck # a little bit too much for k6, maybe after https://github.com/tomarrell/wrapcheck/issues/2 is fixed
    - wsl
    - containedctx
    - usestdlibvars
    - nosprintfhostport
    - nonamedreturns
    # Deprecated linters as of 1.53.3
    - structcheck
    - varcheck
    - deadcode
    - ifshort
    - nosnakecase
    - depguard # Dependency whitelist, needs to be configured
    - goconst # Fails if the same strings used in several places but is not a constant. Not very useful.
    - inamedparam # Fails if interfaces do not have named params. Not in our code style.
    - perfsprint # Suggests using strconv.* instead of fmt.* for printing numbers. Not very practical.
    - protogetter # Complains when code reads var.Something if var.GetSomething() exists. Not useful.
  fast: false
